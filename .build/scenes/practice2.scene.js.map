{
  "version": 3,
  "sources": ["../../scenes/practice2.scene.ts"],
  "sourcesContent": ["import { log } from 'console' \n\nimport Graph from '../models/Graph.model'\nimport { writeTwoDementionalArray, question, readGraph } from '../helper'\n\n\n// const graph = [ // 5\n//     [1, 2],\n//     [2, 3],\n//     [2, 4],\n//     [3, 4],\n//     [4, 5],\n// ]\n\nexport default function() {  \n  const graph = readGraph(0) \n\n  writeTwoDementionalArray(graph.generateMatrixContiguity(), 'Matrix Contiguity')\n  writeTwoDementionalArray(graph.getDistanceMatrix(), 'Matrix Distance')\n  writeTwoDementionalArray(graph.getReachabilityMatrix(), 'Matrix Reachability')\n\n  log(`Distance: ${graph.getDistance()} \\n`)\n  log(`Radius: ${graph.findRadius()} \\n`)\n  log(`Radius: ${graph.findCentres().toString()} \\n`)\n  log(`tiers: \\n`)\n  graph.findTiers().forEach(e => {\n    log(`Tier${e.index}: ${e.value} \\n`)\n  })\n\n  const SimpleCyclesAnswer = graph.findSimpleCycles().length > 0 ? graph.findSimpleCycles()[0].join(' -> ') : \":(\"\n\n  log(`Simple Loop: ${SimpleCyclesAnswer} \\n`) \n  \n  log(graph)\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,qBAAoB;AAGpB,oBAA8D;AAW/C,mCAAW;AACxB,QAAM,QAAQ,6BAAU;AAExB,8CAAyB,MAAM,4BAA4B;AAC3D,8CAAyB,MAAM,qBAAqB;AACpD,8CAAyB,MAAM,yBAAyB;AAExD,0BAAI,aAAa,MAAM;AAAA;AACvB,0BAAI,WAAW,MAAM;AAAA;AACrB,0BAAI,WAAW,MAAM,cAAc;AAAA;AACnC,0BAAI;AAAA;AACJ,QAAM,YAAY,QAAQ,OAAK;AAC7B,4BAAI,OAAO,EAAE,UAAU,EAAE;AAAA;AAAA;AAG3B,QAAM,qBAAqB,MAAM,mBAAmB,SAAS,IAAI,MAAM,mBAAmB,GAAG,KAAK,UAAU;AAE5G,0BAAI,gBAAgB;AAAA;AAEpB,0BAAI;AAAA;",
  "names": []
}
